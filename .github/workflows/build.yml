name: Build

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    needs: [lint, commitlint, e2e]
    runs-on: ubuntu-latest
    steps:
      - run: echo 'dummy'

  release:
    needs: [build]
    runs-on: ubuntu-latest
    if: |
      (
        startsWith(github.event.commits[0].message, 'fix(deps): update renovate/renovate docker tag ')
        || startsWith(github.event.commits[0].message, 'fix(deps): update dependency renovate/renovate ')
        || github.event_name == 'workflow_dispatch'
      )
      && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          fetch-depth: 0
          ref: 'release'
      - name: Fetch tags
        run: git fetch --tags
      - name: Setup Git user
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Merge main
        run: |
          git merge -m 'chore(release): merge main (${{ github.sha }})' ${{ github.sha }}
      - name: Setup node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: '16.x'
      - name: Install project
        run: yarn install --frozen-lockfile --ignore-scripts
      - name: Get version
        id: release
        run: yarn release:version
      - name: Release
        run: yarn release -- "${{ steps.release.outputs.version }}"
      - name: Get changelog section
        id: changelog
        run: |
          changelog="$(git show --unified=0 CHANGELOG.md \
              | tail +12 \
              | sed -e 's/^\+//' \
              | sed -z 's/\n/%0A/g;s/\r/%0D/g')"
          echo "::set-output name=changelog::${changelog}"
      - name: Publish release
        run: git push --follow-tags
      - name: Publish GitHub release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # renovate: tag=v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.release.outputs.version }}
          release_name: v${{ steps.release.outputs.version }}
          body: |
            *See the the [changelog](
              https://github.com/${{ github.repository }}/blob/release/CHANGELOG.md
            ) for changes in all releases.*

            ${{ steps.changelog.outputs.changelog }}
